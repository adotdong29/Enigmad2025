{"ast":null,"code":"import { gameConfig } from '../constants/gameConfig';\nexport const helpers = {\n  formatTime: milliseconds => {\n    const seconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  },\n  calculateScore: (timeSpent, patternSize) => {\n    const {\n      basePoints,\n      timeBonus,\n      patternEfficiencyBonus\n    } = gameConfig.scoring;\n    let score = basePoints;\n\n    // Add time bonus if solved quickly\n    if (timeSpent < 60000) {\n      // Under 1 minute\n      score += timeBonus;\n    }\n\n    // Add efficiency bonus for minimal patterns\n    if (patternSize <= 3) {\n      score += patternEfficiencyBonus;\n    }\n    return score;\n  },\n  shuffleArray: array => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  },\n  generateRandomKey: () => {\n    const direction = Math.random() < 0.5 ? 'left' : 'right';\n    const shift = Math.floor(Math.random() * 25) + 1;\n    return `${direction} shift ${shift}`;\n  }\n};","map":{"version":3,"names":["gameConfig","helpers","formatTime","milliseconds","seconds","Math","floor","minutes","remainingSeconds","toString","padStart","calculateScore","timeSpent","patternSize","basePoints","timeBonus","patternEfficiencyBonus","scoring","score","shuffleArray","array","shuffled","i","length","j","random","generateRandomKey","direction","shift"],"sources":["/Users/qdong/Desktop/Enigmadv4/src/utils/helpers.js"],"sourcesContent":["import { gameConfig } from '../constants/gameConfig';\n\nexport const helpers = {\n  formatTime: (milliseconds) => {\n    const seconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    \n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  },\n  \n  calculateScore: (timeSpent, patternSize) => {\n    const { basePoints, timeBonus, patternEfficiencyBonus } = gameConfig.scoring;\n    let score = basePoints;\n    \n    // Add time bonus if solved quickly\n    if (timeSpent < 60000) { // Under 1 minute\n      score += timeBonus;\n    }\n    \n    // Add efficiency bonus for minimal patterns\n    if (patternSize <= 3) {\n      score += patternEfficiencyBonus;\n    }\n    \n    return score;\n  },\n  \n  shuffleArray: (array) => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  },\n  \n  generateRandomKey: () => {\n    const direction = Math.random() < 0.5 ? 'left' : 'right';\n    const shift = Math.floor(Math.random() * 25) + 1;\n    return `${direction} shift ${shift}`;\n  }\n};"],"mappings":"AAAA,SAASA,UAAU,QAAQ,yBAAyB;AAEpD,OAAO,MAAMC,OAAO,GAAG;EACrBC,UAAU,EAAGC,YAAY,IAAK;IAC5B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,GAAG,IAAI,CAAC;IAC/C,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMI,gBAAgB,GAAGJ,OAAO,GAAG,EAAE;IAErC,OAAO,GAAGG,OAAO,IAAIC,gBAAgB,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACrE,CAAC;EAEDC,cAAc,EAAEA,CAACC,SAAS,EAAEC,WAAW,KAAK;IAC1C,MAAM;MAAEC,UAAU;MAAEC,SAAS;MAAEC;IAAuB,CAAC,GAAGhB,UAAU,CAACiB,OAAO;IAC5E,IAAIC,KAAK,GAAGJ,UAAU;;IAEtB;IACA,IAAIF,SAAS,GAAG,KAAK,EAAE;MAAE;MACvBM,KAAK,IAAIH,SAAS;IACpB;;IAEA;IACA,IAAIF,WAAW,IAAI,CAAC,EAAE;MACpBK,KAAK,IAAIF,sBAAsB;IACjC;IAEA,OAAOE,KAAK;EACd,CAAC;EAEDC,YAAY,EAAGC,KAAK,IAAK;IACvB,MAAMC,QAAQ,GAAG,CAAC,GAAGD,KAAK,CAAC;IAC3B,KAAK,IAAIE,CAAC,GAAGD,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC5C,MAAME,CAAC,GAAGnB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACoB,MAAM,CAAC,CAAC,IAAIH,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,QAAQ,CAACC,CAAC,CAAC,EAAED,QAAQ,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,QAAQ,CAACG,CAAC,CAAC,EAAEH,QAAQ,CAACC,CAAC,CAAC,CAAC;IACzD;IACA,OAAOD,QAAQ;EACjB,CAAC;EAEDK,iBAAiB,EAAEA,CAAA,KAAM;IACvB,MAAMC,SAAS,GAAGtB,IAAI,CAACoB,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,GAAG,OAAO;IACxD,MAAMG,KAAK,GAAGvB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACoB,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;IAChD,OAAO,GAAGE,SAAS,UAAUC,KAAK,EAAE;EACtC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
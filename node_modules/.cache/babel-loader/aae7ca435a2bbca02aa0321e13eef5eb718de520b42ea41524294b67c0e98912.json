{"ast":null,"code":"import React from'react';import{useGameState}from'../../hooks/useGameState';import{gameConfig}from'../../constants/gameConfig';import Button from'../ui/Button';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BombeBoard=()=>{const{state,dispatch}=useGameState();const{rows,cols}=gameConfig.gridSize;const handleDotClick=(row,col)=>{if(!state.isRunning){dispatch({type:'TOGGLE_DOT',row,col});}};const handleRunBombe=()=>{dispatch({type:'START_BOMBE'});// Simulate Bombe machine running\nsetTimeout(()=>{dispatch({type:'FINISH_BOMBE',key:'right shift 3'// This would normally come from the level data\n});},gameConfig.animation.bombeRunDuration);};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 p-6 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"grid gap-4\",style:{gridTemplateColumns:`repeat(${cols}, minmax(0, 1fr))`,gridTemplateRows:`repeat(${rows}, minmax(0, 1fr))`},children:Array.from({length:rows*cols},(_,i)=>{const row=Math.floor(i/cols);const col=i%cols;const dotId=`${row}-${col}`;return/*#__PURE__*/_jsx(\"button\",{className:`bombe-dot ${state.selectedDots.has(dotId)?'bombe-dot-selected':'bg-white'}`,onClick:()=>handleDotClick(row,col),disabled:state.isRunning},dotId);})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 flex justify-center\",children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"large\",onClick:handleRunBombe,disabled:state.isRunning||state.selectedDots.size===0,children:state.isRunning?'Running Bombe...':'Run Bombe'})})]});};export default BombeBoard;// Added export statement","map":{"version":3,"names":["React","useGameState","gameConfig","Button","jsx","_jsx","jsxs","_jsxs","BombeBoard","state","dispatch","rows","cols","gridSize","handleDotClick","row","col","isRunning","type","handleRunBombe","setTimeout","key","animation","bombeRunDuration","className","children","style","gridTemplateColumns","gridTemplateRows","Array","from","length","_","i","Math","floor","dotId","selectedDots","has","onClick","disabled","variant","size"],"sources":["/Users/qdong/Desktop/Enigmadv5/src/components/game/BombeBoard.js"],"sourcesContent":["import React from 'react';\nimport { useGameState } from '../../hooks/useGameState';\nimport { gameConfig } from '../../constants/gameConfig';\nimport Button from '../ui/Button';\n\nconst BombeBoard = () => {\n  const { state, dispatch } = useGameState();\n  const { rows, cols } = gameConfig.gridSize;\n\n  const handleDotClick = (row, col) => {\n    if (!state.isRunning) {\n      dispatch({ type: 'TOGGLE_DOT', row, col });\n    }\n  };\n\n  const handleRunBombe = () => {\n    dispatch({ type: 'START_BOMBE' });\n    \n    // Simulate Bombe machine running\n    setTimeout(() => {\n      dispatch({ \n        type: 'FINISH_BOMBE',\n        key: 'right shift 3' // This would normally come from the level data\n      });\n    }, gameConfig.animation.bombeRunDuration);\n  };\n\n  return (\n    <div className=\"bg-gray-100 p-6 rounded-lg shadow-md\">\n      <div className=\"grid gap-4\"\n        style={{ \n          gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n          gridTemplateRows: `repeat(${rows}, minmax(0, 1fr))`\n        }}>\n        {Array.from({ length: rows * cols }, (_, i) => {\n          const row = Math.floor(i / cols);\n          const col = i % cols;\n          const dotId = `${row}-${col}`;\n          \n          return (\n            <button\n              key={dotId}\n              className={`bombe-dot ${\n                state.selectedDots.has(dotId) ? 'bombe-dot-selected' : 'bg-white'\n              }`}\n              onClick={() => handleDotClick(row, col)}\n              disabled={state.isRunning}\n            />\n          );\n        })}\n      </div>\n      \n      <div className=\"mt-6 flex justify-center\">\n        <Button\n          variant=\"primary\"\n          size=\"large\"\n          onClick={handleRunBombe}\n          disabled={state.isRunning || state.selectedDots.size === 0}\n        >\n          {state.isRunning ? 'Running Bombe...' : 'Run Bombe'}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default BombeBoard;  // Added export statement"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,YAAY,KAAQ,0BAA0B,CACvD,OAASC,UAAU,KAAQ,4BAA4B,CACvD,MAAO,CAAAC,MAAM,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAGT,YAAY,CAAC,CAAC,CAC1C,KAAM,CAAEU,IAAI,CAAEC,IAAK,CAAC,CAAGV,UAAU,CAACW,QAAQ,CAE1C,KAAM,CAAAC,cAAc,CAAGA,CAACC,GAAG,CAAEC,GAAG,GAAK,CACnC,GAAI,CAACP,KAAK,CAACQ,SAAS,CAAE,CACpBP,QAAQ,CAAC,CAAEQ,IAAI,CAAE,YAAY,CAAEH,GAAG,CAAEC,GAAI,CAAC,CAAC,CAC5C,CACF,CAAC,CAED,KAAM,CAAAG,cAAc,CAAGA,CAAA,GAAM,CAC3BT,QAAQ,CAAC,CAAEQ,IAAI,CAAE,aAAc,CAAC,CAAC,CAEjC;AACAE,UAAU,CAAC,IAAM,CACfV,QAAQ,CAAC,CACPQ,IAAI,CAAE,cAAc,CACpBG,GAAG,CAAE,eAAgB;AACvB,CAAC,CAAC,CACJ,CAAC,CAAEnB,UAAU,CAACoB,SAAS,CAACC,gBAAgB,CAAC,CAC3C,CAAC,CAED,mBACEhB,KAAA,QAAKiB,SAAS,CAAC,sCAAsC,CAAAC,QAAA,eACnDpB,IAAA,QAAKmB,SAAS,CAAC,YAAY,CACzBE,KAAK,CAAE,CACLC,mBAAmB,CAAE,UAAUf,IAAI,mBAAmB,CACtDgB,gBAAgB,CAAE,UAAUjB,IAAI,mBAClC,CAAE,CAAAc,QAAA,CACDI,KAAK,CAACC,IAAI,CAAC,CAAEC,MAAM,CAAEpB,IAAI,CAAGC,IAAK,CAAC,CAAE,CAACoB,CAAC,CAAEC,CAAC,GAAK,CAC7C,KAAM,CAAAlB,GAAG,CAAGmB,IAAI,CAACC,KAAK,CAACF,CAAC,CAAGrB,IAAI,CAAC,CAChC,KAAM,CAAAI,GAAG,CAAGiB,CAAC,CAAGrB,IAAI,CACpB,KAAM,CAAAwB,KAAK,CAAG,GAAGrB,GAAG,IAAIC,GAAG,EAAE,CAE7B,mBACEX,IAAA,WAEEmB,SAAS,CAAE,aACTf,KAAK,CAAC4B,YAAY,CAACC,GAAG,CAACF,KAAK,CAAC,CAAG,oBAAoB,CAAG,UAAU,EAChE,CACHG,OAAO,CAAEA,CAAA,GAAMzB,cAAc,CAACC,GAAG,CAAEC,GAAG,CAAE,CACxCwB,QAAQ,CAAE/B,KAAK,CAACQ,SAAU,EALrBmB,KAMN,CAAC,CAEN,CAAC,CAAC,CACC,CAAC,cAEN/B,IAAA,QAAKmB,SAAS,CAAC,0BAA0B,CAAAC,QAAA,cACvCpB,IAAA,CAACF,MAAM,EACLsC,OAAO,CAAC,SAAS,CACjBC,IAAI,CAAC,OAAO,CACZH,OAAO,CAAEpB,cAAe,CACxBqB,QAAQ,CAAE/B,KAAK,CAACQ,SAAS,EAAIR,KAAK,CAAC4B,YAAY,CAACK,IAAI,GAAK,CAAE,CAAAjB,QAAA,CAE1DhB,KAAK,CAACQ,SAAS,CAAG,kBAAkB,CAAG,WAAW,CAC7C,CAAC,CACN,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,UAAU,CAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
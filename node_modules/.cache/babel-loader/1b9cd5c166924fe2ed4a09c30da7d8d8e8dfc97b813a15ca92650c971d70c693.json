{"ast":null,"code":"var _jsxFileName = \"/Users/qdong/Desktop/Enigmadv5 copy/src/components/game/DecryptionInput.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGameState } from '../../hooks/useGameState';\nimport { levels } from '../../data/levels';\nimport Button from '../ui/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DecryptionInput = () => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useGameState();\n  const level = levels[state.currentLevel] || levels[0];\n  if (!level) return null;\n  const handleInputChange = (index, value) => {\n    const newAnswer = state.userAnswer.split('');\n    newAnswer[index] = value.toUpperCase();\n    dispatch({\n      type: 'SET_USER_ANSWER',\n      answer: newAnswer.join('')\n    });\n  };\n  const handleCheckAnswer = () => {\n    const isCorrect = state.userAnswer.toUpperCase() === level.correctMessage;\n    if (isCorrect) {\n      dispatch({\n        type: 'ANSWER_CORRECT',\n        score: 100\n      });\n      if (state.currentLevel < levels.length - 1) {\n        dispatch({\n          type: 'NEXT_LEVEL',\n          message: levels[state.currentLevel + 1].encryptedMessage\n        });\n      } else {\n        dispatch({\n          type: 'GAME_COMPLETE'\n        });\n      }\n    } else {\n      dispatch({\n        type: 'ANSWER_INCORRECT'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center font-semibold mb-4\",\n      children: \"Enter Decrypted Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center gap-2 mb-4\",\n      children: level.correctMessage.split('').map((_, idx) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: \"1\",\n        className: \"message-box bg-white\",\n        value: state.userAnswer[idx] || '',\n        onChange: e => handleInputChange(idx, e.target.value),\n        disabled: !state.showSolution\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: handleCheckAnswer,\n        disabled: !state.showSolution || state.userAnswer.length !== level.correctMessage.length,\n        children: \"Check Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(DecryptionInput, \"qN0wmgLdMAMLpw/E3x6cjVenDC4=\", false, function () {\n  return [useGameState];\n});\n_c = DecryptionInput;\nexport default DecryptionInput;\nvar _c;\n$RefreshReg$(_c, \"DecryptionInput\");","map":{"version":3,"names":["React","useGameState","levels","Button","jsxDEV","_jsxDEV","DecryptionInput","_s","state","dispatch","level","currentLevel","handleInputChange","index","value","newAnswer","userAnswer","split","toUpperCase","type","answer","join","handleCheckAnswer","isCorrect","correctMessage","score","length","message","encryptedMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_","idx","maxLength","onChange","e","target","disabled","showSolution","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/qdong/Desktop/Enigmadv5 copy/src/components/game/DecryptionInput.js"],"sourcesContent":["import React from 'react';\nimport { useGameState } from '../../hooks/useGameState';\nimport { levels } from '../../data/levels';\nimport Button from '../ui/Button';\n\nconst DecryptionInput = () => {\n  const { state, dispatch } = useGameState();\n  const level = levels[state.currentLevel] || levels[0];\n\n  if (!level) return null;\n\n  const handleInputChange = (index, value) => {\n    const newAnswer = state.userAnswer.split('');\n    newAnswer[index] = value.toUpperCase();\n    dispatch({ type: 'SET_USER_ANSWER', answer: newAnswer.join('') });\n  };\n\n  const handleCheckAnswer = () => {\n    const isCorrect = state.userAnswer.toUpperCase() === level.correctMessage;\n    if (isCorrect) {\n      dispatch({ type: 'ANSWER_CORRECT', score: 100 });\n      if (state.currentLevel < levels.length - 1) {\n        dispatch({ \n          type: 'NEXT_LEVEL',\n          message: levels[state.currentLevel + 1].encryptedMessage\n        });\n      } else {\n        dispatch({ type: 'GAME_COMPLETE' });\n      }\n    } else {\n      dispatch({ type: 'ANSWER_INCORRECT' });\n    }\n  };\n\n  return (\n    <div className=\"mt-8\">\n      <h3 className=\"text-center font-semibold mb-4\">Enter Decrypted Message</h3>\n      <div className=\"flex justify-center gap-2 mb-4\">\n        {level.correctMessage.split('').map((_, idx) => (\n          <input\n            key={idx}\n            type=\"text\"\n            maxLength=\"1\"\n            className=\"message-box bg-white\"\n            value={state.userAnswer[idx] || ''}\n            onChange={(e) => handleInputChange(idx, e.target.value)}\n            disabled={!state.showSolution}\n          />\n        ))}\n      </div>\n      \n      <div className=\"flex justify-center\">\n        <Button\n          variant=\"success\"\n          onClick={handleCheckAnswer}\n          disabled={!state.showSolution || state.userAnswer.length !== level.correctMessage.length}\n        >\n          Check Answer\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default DecryptionInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/qdong/Desktop/Enigmadv5 copy/src/components/game/BombeBoard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGameState } from '../../hooks/useGameState';\nimport { gameConfig } from '../../constants/gameConfig';\nimport Button from '../ui/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BombeBoard = () => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useGameState();\n  const {\n    rows,\n    cols\n  } = gameConfig.gridSize;\n  const handleDotClick = (row, col) => {\n    if (!state.isRunning) {\n      dispatch({\n        type: 'TOGGLE_DOT',\n        row,\n        col\n      });\n    }\n  };\n  const handleRunBombe = () => {\n    dispatch({\n      type: 'START_BOMBE'\n    });\n    setTimeout(() => {\n      const currentLevel = levels[state.currentLevel];\n      dispatch({\n        type: 'FINISH_BOMBE',\n        key: currentLevel.decryptionKey\n      });\n    }, gameConfig.animation.bombeRunDuration);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bombe-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-4\",\n      style: {\n        gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n        gridTemplateRows: `repeat(${rows}, minmax(0, 1fr))`\n      },\n      children: Array.from({\n        length: rows * cols\n      }, (_, i) => {\n        const row = Math.floor(i / cols);\n        const col = i % cols;\n        const dotId = `${row}-${col}`;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `bombe-dot ${state.selectedDots.has(dotId) ? 'bombe-dot-selected' : ''}`,\n          onClick: () => handleDotClick(row, col),\n          disabled: state.isRunning,\n          \"aria-label\": `Dot at position ${row},${col}`\n        }, dotId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleRunBombe,\n        disabled: state.isRunning || state.selectedDots.size === 0,\n        children: state.isRunning ? 'Running Bombe...' : 'Run Bombe'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(BombeBoard, \"qN0wmgLdMAMLpw/E3x6cjVenDC4=\", false, function () {\n  return [useGameState];\n});\n_c = BombeBoard;\nexport default BombeBoard;\nvar _c;\n$RefreshReg$(_c, \"BombeBoard\");","map":{"version":3,"names":["React","useGameState","gameConfig","Button","jsxDEV","_jsxDEV","BombeBoard","_s","state","dispatch","rows","cols","gridSize","handleDotClick","row","col","isRunning","type","handleRunBombe","setTimeout","currentLevel","levels","key","decryptionKey","animation","bombeRunDuration","className","children","style","gridTemplateColumns","gridTemplateRows","Array","from","length","_","i","Math","floor","dotId","selectedDots","has","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","_c","$RefreshReg$"],"sources":["/Users/qdong/Desktop/Enigmadv5 copy/src/components/game/BombeBoard.js"],"sourcesContent":["import React from 'react';\nimport { useGameState } from '../../hooks/useGameState';\nimport { gameConfig } from '../../constants/gameConfig';\nimport Button from '../ui/Button';\n\nconst BombeBoard = () => {\n  const { state, dispatch } = useGameState();\n  const { rows, cols } = gameConfig.gridSize;\n\n  const handleDotClick = (row, col) => {\n    if (!state.isRunning) {\n      dispatch({ type: 'TOGGLE_DOT', row, col });\n    }\n  };\n\n  const handleRunBombe = () => {\n    dispatch({ type: 'START_BOMBE' });\n    setTimeout(() => {\n      const currentLevel = levels[state.currentLevel];\n      dispatch({ \n        type: 'FINISH_BOMBE',\n        key: currentLevel.decryptionKey\n      });\n    }, gameConfig.animation.bombeRunDuration);\n  };\n\n  return (\n    <div className=\"bombe-board\">\n      <div className=\"grid gap-4\" \n        style={{ \n          gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n          gridTemplateRows: `repeat(${rows}, minmax(0, 1fr))`\n        }}>\n        {Array.from({ length: rows * cols }, (_, i) => {\n          const row = Math.floor(i / cols);\n          const col = i % cols;\n          const dotId = `${row}-${col}`;\n          \n          return (\n            <button\n              key={dotId}\n              className={`bombe-dot ${\n                state.selectedDots.has(dotId) ? 'bombe-dot-selected' : ''\n              }`}\n              onClick={() => handleDotClick(row, col)}\n              disabled={state.isRunning}\n              aria-label={`Dot at position ${row},${col}`}\n            />\n          );\n        })}\n      </div>\n      \n      <div className=\"mt-6 flex justify-center\">\n        <Button\n          variant=\"primary\"\n          onClick={handleRunBombe}\n          disabled={state.isRunning || state.selectedDots.size === 0}\n        >\n          {state.isRunning ? 'Running Bombe...' : 'Run Bombe'}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default BombeBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
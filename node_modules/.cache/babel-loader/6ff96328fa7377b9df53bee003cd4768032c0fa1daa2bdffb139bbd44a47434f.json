{"ast":null,"code":"var _jsxFileName = \"/Users/qdong/Desktop/Enigmadv4/src/components/game/MessageDisplay.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGameState } from '../../hooks/useGameState';\nimport { levels } from '../../data/levels';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageDisplay = () => {\n  _s();\n  const {\n    state\n  } = useGameState();\n  const level = levels[state.currentLevel];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Encrypted Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center gap-2\",\n        children: level.encryptedMessage.split('').map((char, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-box bg-white\",\n          children: char\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), state.showSolution && state.decryptionKey && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-green-100 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-green-800 font-medium\",\n        children: [\"Decryption Key: \", state.decryptionKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageDisplay, \"wqP7vUYH2QnNC1gp/D4fyC/mN8c=\", false, function () {\n  return [useGameState];\n});\n_c = MessageDisplay;\nexport default MessageDisplay; // Added export statement\nvar _c;\n$RefreshReg$(_c, \"MessageDisplay\");","map":{"version":3,"names":["React","useGameState","levels","jsxDEV","_jsxDEV","MessageDisplay","_s","state","level","currentLevel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","encryptedMessage","split","map","char","idx","showSolution","decryptionKey","_c","$RefreshReg$"],"sources":["/Users/qdong/Desktop/Enigmadv4/src/components/game/MessageDisplay.js"],"sourcesContent":["import React from 'react';\nimport { useGameState } from '../../hooks/useGameState';\nimport { levels } from '../../data/levels';\n\nconst MessageDisplay = () => {\n  const { state } = useGameState();\n  const level = levels[state.currentLevel];\n\n  return (\n    <div className=\"mb-8\">\n      <div className=\"text-center mb-4\">\n        <h2 className=\"text-xl font-semibold mb-2\">Encrypted Message</h2>\n        <div className=\"flex justify-center gap-2\">\n          {level.encryptedMessage.split('').map((char, idx) => (\n            <div key={idx} className=\"message-box bg-white\">\n              {char}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {state.showSolution && state.decryptionKey && (\n        <div className=\"mt-4 p-4 bg-green-100 rounded-lg\">\n          <p className=\"text-center text-green-800 font-medium\">\n            Decryption Key: {state.decryptionKey}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MessageDisplay;  // Added export statement"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAM,CAAC,GAAGN,YAAY,CAAC,CAAC;EAChC,MAAMO,KAAK,GAAGN,MAAM,CAACK,KAAK,CAACE,YAAY,CAAC;EAExC,oBACEL,OAAA;IAAKM,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBP,OAAA;MAAKM,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BP,OAAA;QAAIM,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjEX,OAAA;QAAKM,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EACvCH,KAAK,CAACQ,gBAAgB,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBAC9ChB,OAAA;UAAeM,SAAS,EAAC,sBAAsB;UAAAC,QAAA,EAC5CQ;QAAI,GADGC,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELR,KAAK,CAACc,YAAY,IAAId,KAAK,CAACe,aAAa,iBACxClB,OAAA;MAAKM,SAAS,EAAC,kCAAkC;MAAAC,QAAA,eAC/CP,OAAA;QAAGM,SAAS,EAAC,wCAAwC;QAAAC,QAAA,GAAC,kBACpC,EAACJ,KAAK,CAACe,aAAa;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACT,EAAA,CA1BID,cAAc;EAAA,QACAJ,YAAY;AAAA;AAAAsB,EAAA,GAD1BlB,cAAc;AA4BpB,eAAeA,cAAc,CAAC,CAAE;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
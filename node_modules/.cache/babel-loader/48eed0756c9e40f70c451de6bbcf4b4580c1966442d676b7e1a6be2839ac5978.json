{"ast":null,"code":"// src/contexts/GameContext.js\nimport React,{createContext,useReducer,useContext}from'react';import{levels}from'../data/levels';// Create and export the context\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const GameContext=/*#__PURE__*/createContext();const initialState={currentLevel:0,selectedDots:new Set(),encryptedMessage:levels[0].encryptedMessage,decryptionKey:'',isRunning:false,showSolution:false,userAnswer:'',score:0,timeSpent:0,errors:0,gameComplete:false};const gameReducer=(state,action)=>{switch(action.type){case'TOGGLE_DOT':const newDots=new Set(state.selectedDots);const dotId=`${action.row}-${action.col}`;if(newDots.has(dotId)){newDots.delete(dotId);}else{newDots.add(dotId);}return{...state,selectedDots:newDots};case'START_BOMBE':return{...state,isRunning:true,showSolution:false,decryptionKey:''};case'FINISH_BOMBE':return{...state,isRunning:false,showSolution:true,decryptionKey:action.key};case'SET_USER_ANSWER':return{...state,userAnswer:action.answer};case'ANSWER_CORRECT':return{...state,score:state.score+action.score};case'ANSWER_INCORRECT':return{...state,errors:state.errors+1};case'NEXT_LEVEL':return{...state,currentLevel:state.currentLevel+1,selectedDots:new Set(),encryptedMessage:action.message,decryptionKey:'',isRunning:false,showSolution:false,userAnswer:''};case'GAME_COMPLETE':return{...state,gameComplete:true};default:return state;}};export const GameProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(gameReducer,initialState);return/*#__PURE__*/_jsx(GameContext.Provider,{value:{state,dispatch},children:children});};// Remove this since we'll use the hook from the context file directly\n// export const useGameState = () => {\n//   const context = useContext(GameContext);\n//   if (!context) {\n//     throw new Error('useGameState must be used within a GameProvider');\n//   }\n//   return context;\n// };\n// Export everything needed\nexport const useGameState=()=>{const context=useContext(GameContext);if(!context){throw new Error('useGameState must be used within a GameProvider');}return context;};","map":{"version":3,"names":["React","createContext","useReducer","useContext","levels","jsx","_jsx","GameContext","initialState","currentLevel","selectedDots","Set","encryptedMessage","decryptionKey","isRunning","showSolution","userAnswer","score","timeSpent","errors","gameComplete","gameReducer","state","action","type","newDots","dotId","row","col","has","delete","add","key","answer","message","GameProvider","_ref","children","dispatch","Provider","value","useGameState","context","Error"],"sources":["/Users/qdong/Desktop/Enigmadv5/src/contexts/GameContext.js"],"sourcesContent":["// src/contexts/GameContext.js\nimport React, { createContext, useReducer, useContext } from 'react';\nimport { levels } from '../data/levels';\n\n// Create and export the context\nexport const GameContext = createContext();\n\nconst initialState = {\n  currentLevel: 0,\n  selectedDots: new Set(),\n  encryptedMessage: levels[0].encryptedMessage,\n  decryptionKey: '',\n  isRunning: false,\n  showSolution: false,\n  userAnswer: '',\n  score: 0,\n  timeSpent: 0,\n  errors: 0,\n  gameComplete: false\n};\n\nconst gameReducer = (state, action) => {\n  switch (action.type) {\n    case 'TOGGLE_DOT':\n      const newDots = new Set(state.selectedDots);\n      const dotId = `${action.row}-${action.col}`;\n      if (newDots.has(dotId)) {\n        newDots.delete(dotId);\n      } else {\n        newDots.add(dotId);\n      }\n      return { ...state, selectedDots: newDots };\n\n    case 'START_BOMBE':\n      return { \n        ...state, \n        isRunning: true,\n        showSolution: false,\n        decryptionKey: ''\n      };\n\n    case 'FINISH_BOMBE':\n      return {\n        ...state,\n        isRunning: false,\n        showSolution: true,\n        decryptionKey: action.key\n      };\n\n    case 'SET_USER_ANSWER':\n      return {\n        ...state,\n        userAnswer: action.answer\n      };\n\n    case 'ANSWER_CORRECT':\n      return {\n        ...state,\n        score: state.score + action.score\n      };\n\n    case 'ANSWER_INCORRECT':\n      return {\n        ...state,\n        errors: state.errors + 1\n      };\n\n    case 'NEXT_LEVEL':\n      return {\n        ...state,\n        currentLevel: state.currentLevel + 1,\n        selectedDots: new Set(),\n        encryptedMessage: action.message,\n        decryptionKey: '',\n        isRunning: false,\n        showSolution: false,\n        userAnswer: ''\n      };\n\n    case 'GAME_COMPLETE':\n      return {\n        ...state,\n        gameComplete: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const GameProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(gameReducer, initialState);\n\n  return (\n    <GameContext.Provider value={{ state, dispatch }}>\n      {children}\n    </GameContext.Provider>\n  );\n};\n\n// Remove this since we'll use the hook from the context file directly\n// export const useGameState = () => {\n//   const context = useContext(GameContext);\n//   if (!context) {\n//     throw new Error('useGameState must be used within a GameProvider');\n//   }\n//   return context;\n// };\n\n// Export everything needed\nexport const useGameState = () => {\n  const context = useContext(GameContext);\n  if (!context) {\n    throw new Error('useGameState must be used within a GameProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}